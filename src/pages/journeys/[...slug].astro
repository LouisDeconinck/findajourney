---
import PageLayout from "../../layouts/PageLayout.astro";
import PostCard from "../../components/PostCard.astro";

import { getCollection } from "astro:content";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("journeys");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
// 2. When it's time to render, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();
const { slug } = Astro.params;

const allPosts = await getCollection("blog", ({ data }) => {
  return data.category.slug === slug;
});
allPosts.sort((a, b) => {
  if (a.data.category.episode === undefined) return 1;
  if (b.data.category.episode === undefined) return -1;
  return a.data.category.episode - b.data.category.episode;
});
const formattedDate = new Date(entry.data.pubDate).toLocaleDateString("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
});
---

<PageLayout>
  <article
    class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8 prose prose-slate prose-lg lg:prose-xl prose-img:rounded-md prose-img:shadow-lg"
  >
    <p class="text-center !my-0">
      Written by <img
        class="inline h-10 w-10 !rounded-full"
        src={`${entry.data.author.image}`}
        alt={`${entry.data.author.name}`}
      />
      <span class="font-medium text-teal-800">{entry.data.author.name}</span> on
      <span class="font-medium text-teal-800"
        ><time datetime={`${entry.data.pubDate}`}>{formattedDate}</time></span
      >
    </p>
    <h1 class="text-center">
      {entry.data.title}
    </h1>
    <img src={`${entry.data.image.url}`} alt={`${entry.data.image.alt}`} />
    <Content />
  </article>
  <h1 class="text-center text-4xl font-bold">
    Our Journey
  </h1>
  <div
    class="mt-6 max-w-lg mx-auto grid gap-5 lg:grid-cols-3 lg:max-w-none pb-48"
  >
    {
      allPosts.map((post) => (
        <PostCard
          title={post.data.title}
          description={post.data.description}
          author={post.data.author.name}
          authorImg={post.data.author.image}
          date={post.data.pubDate}
          url={post.slug}
          category={post.data.category.name}
          categorySlug={post.data.category.slug}
          episode={post.data.category.episode}
          imageUrl={post.data.image.url}
          imageAlt={post.data.image.alt}
        />
      ))
    }
  </div>
</PageLayout>
